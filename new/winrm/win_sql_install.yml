- hosts: all
  gather_facts: True
  vars:
   sql_instance_name: AKAZURE
   ansible_password: !vault |
          $ANSIBLE_VAULT;1.1;AES256
          65393163353539636438353465633066356336393832363739353666373765363038363135353261
          6562636562313665636562646433366531333134646366340a383266326161313066383234326361
          31663035666439303135303138333837653232633364633134363634363138323736333638393235
          3766633363313933610a636534346437343561356661393037363964303235323030633332363466
          3763
  tasks:
   - debug: var=hostvars[inventory_hostname]
   - name: create a directory for installer download
     win_file: 
        path: c:\sql
        state: directory
   
   - name: create a directory for installer extraction
     win_file: 
        path: c:\sql\installer
        state: directory

   - name: create the configuration file
     win_template: 
       src: sql_conf_2016.ini.j2
       dest: c:\sql\sql_conf_2016.ini

   - name: Windows | Install .NET Framework Core
     win_feature:
        name: NET-Framework-Core
        state: present

# Setup SQL Server Pre-Reqs
   - name: Windows | Install .NET Framework 3.5
     win_feature:
        name: NET-Framework-Features
        state: present

   - name: Windows | Install .NET Framework 4.5 Features
     win_feature:
        name: NET-Framework-45-Features
        state: present
        include_sub_features: True

   - name: check downloaded file exists
     win_stat:
        path: c:\sql\sql_installer_2016.exe
     register: installer_file

#   - name: get the installer MSSQL2014
#     win_get_url:
#          url: 'http://download.microsoft.com/download/E/A/E/EAE6F7FC-767A-4038-A954-49B8B05D04EB/ExpressAndTools%2064BIT/SQLEXPRWT_x64_ENU.exe'
#          dest: 'c:\sql\sql_installer.exe'
#     when: not installer_file.stat.exists

   - name: get the installer MSSQL2016
     win_get_url:
          url: 'https://download.microsoft.com/download/9/0/7/907AD35F-9F9C-43A5-9789-52470555DB90/ENU/SQLEXPR_x64_ENU.exe'
          dest: 'c:\sql\sql_installer_2016.exe'   
     when: not installer_file.stat.exists

   - name: extract the installer
     win_command: c:\sql\sql_installer_2016.exe /q /x:c:\sql\installer
     args:
      chdir: c:\sql
      creates: c:\sql\installer\setup.exe
   
   - name: Is service MSSQL installed?
     win_service:
       name: 'MSSQL${{ sql_instance_name }}'
     register: service_info

   - debug: var=service_info

   - name: Install the database
     win_command: c:\sql\installer\setup.exe /configurationfile=c:\sql\sql_conf_2016.ini
     args:
       chdir: c:\sql
     when: not service_info.exists 

   - name: Add or update registry for ip port
     win_regedit:
       path: 'HKLM:\Software\Microsoft\Microsoft SQL Server\MSSQL13.{{ sql_instance_name }}\MSSQLServer\SuperSocketNetLib\Tcp\IPAll'
       name: TcpPort
       data: 1433
     register: win_reg

   - name: Add or update registry for ip port
     win_regedit:
       path: 'HKLM:\Software\Microsoft\Microsoft SQL Server\MSSQL13.{{ sql_instance_name }}\MSSQLServer\SuperSocketNetLib\Np'
       name: Enabled
       data: 1
       type: dword
     register: win_reg

   - name: Add or update registry for ip port
     win_regedit:
       path: 'HKLM:\Software\Microsoft\Microsoft SQL Server\MSSQL13.{{ sql_instance_name }}\MSSQLServer\SuperSocketNetLib\Tcp'
       name: Enabled
       data: 1
       type: dword
     register: win_reg

   - name: Firewall rule to allow MSSQL TCP port 1433
     win_firewall_rule:
       name: MSSQL
       localport: 1433
       action: allow
       direction: in
       protocol: tcp
       profiles: [domain, private, public]
       state: present
       enabled: yes

   - name: Restart a service
     win_service:
       name: 'MSSQL${{ sql_instance_name }}'
       force_dependent_services: yes
       state: restarted
     when: win_reg.changed
