---
- hosts: all
  become: yes

  handlers:
    - name: tomcat restart
      service: name=tomcat state=restarted
      sudo: True

  tasks:
    - name: Update yum cache if needed
      yum: update_cache=yes

    - name: Install java-openjdk
      yum: name=java-1.7.0-openjdk-devel state=present

    - name: Add group tomcat
      group: name={{ tomcat_user }} state=present

    - name: Add user tomcat
      user: name={{ tomcat_user }} group={{ tomcat_group }}

    - name: Create instalation folder
      file:
        path: "{{ tomcat_dest }}"
        group: "{{ tomcat_group }}"
        state: directory
}
    - name: Get tomcat
      get_url: 
        url: "{{ tomcat_binary_url }}"
        dest: "{{ tomcat_arch }}"

    - name: Unarchive tomcat
      unarchive:
        src: "{{ tomcat_arch }}"
        dest: "{{ tomcat_dest }}"
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        extra_opts: [--strip-components=1]
        remote_src: yes
      when: update_tomcat

    - name: chmod -R g+r /conf
      file:
        path: "{{ tomcat_dest }}/conf"
        mode: g+r
        recurse: yes
        state: directory

    - name: chmod g+x /conf
      file:
        path: "{{ tomcat_dest }}/conf"
        mode: g+x
        state: directory

    - name: copying service file
      copy: 
        src: tomcat.service
        dest: "/etc/systemd/system/" 
        owner: root 
        mode: 0644

    - name: start & enable tomcat
      service: name=tomcat state=started enabled=yes

    - name: copying tomcat-users.xml
      template: 
        src: tomcat-users.xml.j2 
        dest: "{{ tomcat_dest }}/conf/tomcat-users.xml"
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        mode: 0640
      notify: tomcat restart

    - name: copying server.xml with new port 
      template:
        src: server.xml.j2
        dest: "{{ tomcat_dest }}/conf/server.xml"
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        mode: 0640
      notify: tomcat restart

    - name: copying Manager app context.xml
      copy: 
        src: context.xml
        dest: "{{ tomcat_dest }}/webapps/manager/META-INF/"
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        mode: 0640
      notify: tomcat restart

    - name: copying Host Manager app context.xml
      copy: 
        src: context.xml
        dest: "{{ tomcat_dest }}/webapps/host-manager/META-INF/"
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        mode: 0640
      notify: tomcat restart

    - name: Download and deploy sample.war
      get_url:
        url: "{{ tomcat_sample_url }}"
        dest: "{{ tomcat_dest }}/webapps"
        owner: "{{ tomcat_user }}"
        group: "{{ tomcat_group }}"
        mode: 0440
      notify: tomcat restart

    - name: force all notified handlers to run at this point, not waiting for normal sync points
      meta: flush_handlers

    - name: ensure port is open
      wait_for:
        host: 0.0.0.0
        port: "{{ tomcat_server_port }}"
        delay: 1 
        state: started 

    - name: "check accessibility http://{{ ansible_host }}:{{ tomcat_server_port }}/sample/"
      uri:
        url: http://{{ ansible_host }}:{{ tomcat_server_port }}/sample/
      register: HTTP_code 

    - debug: var=HTTP_code.status
